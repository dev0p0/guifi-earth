//- The template used to produce KML.
//- The actual content is at the end.

//- TODO: use correct comment syntax, use utilities, split this in
//-       multiple files, and update README accordingly.

//- Code for a ZONE
mixin zone(data, parent)
  Folder(id="guifi-#{data.$.id}")
    name= data.$.title
    Snippet
    description.
      <![CDATA[<p>
        <a href="http://guifi.net/node/#{data.$.id}">Zone #{data.$.id} at guifi.net</a>.<br/>
        Child of <a href="#guifi-#{parent.$.id};balloon">#{parent.$.title}</a>.
      </p><hr/>]]>
      #{data._}

    styleUri #guifiZoneStyle
    
    Region
      LatLonAltBox
        - var box = data.$.box.split(',');
        west=  box[0]
        south= box[1]
        east=  box[2]
        north= box[3]
      Lod
        minLodPixels 300
        minFadeExtent 70
    
    mixin dumpChildren(data)


//- Code for a NODE
mixin node(data, supernode, parent)
  Placemark(id="guifi-#{data.$.id}")
    name= data.$.title
    Snippet
    description
      | <![CDATA[<p>
      |   <a href="http://guifi.net/node/#{data.$.id}">Zone #{data.$.id} at guifi.net</a>.<br/>
      |   Child of <a href="#guifi-#{parent.$.id};balloon">#{parent.$.title}</a>.
      
      // node links
      if supernode
        if data.links
          | <br/><a href="#guifi-#{data.$.id}-links;balloon">#{data.links.length} link#{data.links.length==1?'':'s'}</a>.
        else
          | <br/>No links yet.
      else
        each link in data.links
          - var dest = link.node;
          | <br/>Connected to <a href="#guifi-#{dest.$.id};flyto">#{dest.$.title}</a>.
        unless data.links.length
          | <br/>Not connected to any supernode.
      
      // node devices
      if data.$.devices > 0
        | <br/>#{data.$.devices} device#{data.$.devices==1?'':'s'}.
      else
        | <br/>No devices.
      
      | </p><hr/>]]>
      = data._
    
    Style
      - var color, mode;
      case data.$.status
        when "Planned": - color = 'ltblu'
        when "Building": - color = 'pink'
        when "Testing": - color = 'ylw'
        when "Working": - color = 'grn'
        
        when "Reserved": - color = 'wht'
        when "Dropped":  - color = 'wht'
      
      if supernode
        - mode = 'stars' //FIXME: remove other semicolons
      else
        - mode = 'blank'

      IconStyle
        if supernode
          scale 1.3
        else
          scale 0.5

        Icon: href http://maps.google.com/mapfiles/kml/paddle/#{color}-#{mode}.png
        hotSpot(x=32, y=1, xunits="pixels", yunits="pixels")
      
      LabelStyle
        if supernode
          scale 1.2
        else
          scale 0.75
      
      ListStyle
        ItemIcon: href http://maps.google.com/mapfiles/kml/paddle/#{color}-#{mode}-lv.png
      
      LineStyle
        width 4
        
    
    Point
      coordinates #{data.$.lon},#{data.$.lat},#{data.$.antenna_elevation}
      extrude 1
      altitudeMode relativeToGround


//- Code for a supernode's LINKS
mixin links(data)
  Folder(id="guifi-#{data.$.id}-links")
    name= data.$.title
    Snippet
    
    // sort links
    - var links = {"ap/client": [], "wds": []};
    each link in data.links
      - links[link.type].push(link);
    - links = links["wds"].concat(links["ap/client"]);
    
    description
      | <![CDATA[
      |   <h2>
      |     Links of <a href="#guifi-#{data.$.id};flyto">#{data.$.title}</a><br/>
      |     <small><a href="http://guifi.net/node/#{data.$.id}/view/links">See at guifi.net</a><small>
      |   </h2>
      
      table
        each link in links
          - var dest = link.node;
          //FIXME: test that classes are combined
          tr.link(class=link.type)
            td.type= link.type.toUpperCase()
            td.distance <a href="#guifi-#{data.$.id}-#{dest.$.id};balloonFlyto">#{link.distance} km</a>
            td.status= link.status
            td.node <a href="#guifi-#{dest.$.id};flyto">#{dest.$.title}</a>
      
      | ]]>
    
    //- FIXME: LP find a hack to avoid links
    //-        disappearing when region not active
    each link in links
      - var dest = link.node;
      Placemark(id="guifi-#{data.$.id}-#{dest.$.id}")
        name to #{dest.$.title}
        Snippet
        description.
          <![CDATA[
            <h2><a href="#guifi-#{data.$.id};flyto">#{data.$.title}</a> to
                <a href="#guifi-#{dest.$.id};flyto">#{dest.$.title}</a></h2>
            
            <p class="link-details">
              <strong>Type:</strong> #{link.type.toUpperCase()} </br>
              <strong>Status:</strong> #{link.status} </br>
              <strong>Distance:</strong> #{link.distance} km
            </p>
          ]]>
        
        LineString
          coordinates.
            #{data.$.lon},#{data.$.lat},#{data.$.antenna_elevation}
            #{dest.$.lon},#{dest.$.lat},#{dest.$.antenna_elevation}
          altitudeMode relativeToGround
        
        Style
          LineStyle
            case link.type
              when "wds"
                color= api.col('33ff00')
                width 3
              when "ap/client"
                color= api.col('ff0000')
                width 1



mixin dumpChildren(zoneData)
  // zones first
  if "zone" in zoneData
    each zone in zoneData.zone
      mixin zone(zone, zoneData)
  
  // then group nodes
  - var supernodes = {}, nodes = {};
  if "node" in zoneData
    each node in zoneData.node
      // FIXME: find a more precise way
      if node.links.length > 1 || node.$.devices > 1
        - supernodes[node.$.title] = node;
      else
        - nodes[node.$.title] = node;
  - var supernames = Object.keys(supernodes).sort();
  - var names      = Object.keys(nodes).sort();
  
  // dump supernodes first, ordered by name
  each name in supernames
    mixin node(supernodes[name], true, zoneData)
  
  // then other nodes, ordered by name
  each name in names
    mixin node(nodes[name], false, zoneData)
  
  // lastly, dump links for supernodes
  if supernames.length
    Folder(id="guifi-#{zoneData.$.id}-links")
      name Links
      Snippet
      description.
        <![CDATA[<p>
          Links for the <a href="#guifi-#{zoneData.$.id};balloon">#{zoneData.$.title}</a> zone.
        </p>]]>
      styleUri #guifiLinksFolderStyle
      each name in supernames
        if supernodes[name].links
          mixin links(supernodes[name])



!!! xml
kml(xmlns="http://www.opengis.net/kml/2.2")
  
  // The root zone, slightly different from
  // the other zones. Note we do *not* show
  // that within a Region.
  
  Folder#guifi-world
    name= world.$.title
    Snippet
    description.
      <![CDATA[<p>
        <a href="http://guifi.net/guifi_zones">guifi.net root zone</a>.
      </p>]]>
      #{world._}
    
    styleUri #guifiWorldStyle
    visibility 0
    
    // let the fun start!
    mixin dumpChildren(world)
  

  Style#guifiWorldStyle
    ListStyle
      listItemType checkOffOnly //FIXME
      ItemIcon: href world.png
  
  Style#guifiZoneStyle
    // just in case we wanna add something later
  
  Style#guifiZoneLinksStyle
    // just in case we wanna add something later
  
  Style#guifiNodeLinksStyle
    // just in case we wanna add something later

